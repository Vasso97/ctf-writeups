### Secured Session (Easy)

By going to the challenge web page we get the source code of the challenge:

```
import os
from flask import Flask, request, session
from flag import flag

app = Flask(__name__)
app.config['SECRET_KEY'] = os.urandom(24)

def secret_key_to_int(s):
    try:
        secret_key = int(s)
    except ValueError:
        secret_key = 0
    return secret_key

@app.route("/flag")
def index():
    secret_key = secret_key_to_int(request.args['secret_key']) if 'secret_key' in request.args else None
    session['flag'] = flag
    if secret_key == app.config['SECRET_KEY']:
      return session['flag']
    else:
      return "Incorrect secret key!"

@app.route('/')
def source():
    return "

%s

" % open(__file__).read()

if __name__ == "__main__":
    app.run()
```

After reviewing the above code we can make a GET request to `/flag` and provide a get parameter `secret_key`. But the mistake here is that the flag is stored in our cookie. Meaning we dont need to guess the secret_key correctly. All we need to do is provide a random `secret_key` and view the flag in our `session` cookie.

e.g: `https://804e07399366564c.247ctf.com/flag?secret_key=1`

Our session cookie is: `eyJmbGFnIjp7IiBiIjoiTWpRM1ExUkdlMlJoT0RBM09UVm1PR0UxWTJGaU1tVXdNemRrTnpNNE5UZ3dOMkk1WVRreGZRPT0ifX0.XzpNxA.YX8w_jE4l77jH5PRUJDlZIGm_qI`

All we need to do now is base64 decode the first part of the cookie and then base64 decode the flag:

<img src="images/image1.png" width="900">

