## Phonebook by sAINT_barber

Description:

<img src="images/image8.png" width="450">

Okay, so from the description we understand absolutely nothing. Let's have a look at the website.

<img src="images/image9.png" width="450">

Okay here the website wants us to provide a get parameter `file` to get to the phphonebook page. 

<img src="images/image10.png" width="450">

All we have is a button that submits a post request to the same website. Lets check if the `file` parameter is vulnerable to LFI.

I used the php filter wrapper: `php://filter/convert.base64-encode/resource=phphonebook.php`

<img src="images/image11.png" width="450">

So the website is vulnerable to LFI and encoded the page to base64 just like we expected.. 

After decoding the base64 string we find the following php code:
```
<?php
  extract($_POST);

	if (isset($emergency)){
		echo(file_get_contents("/flag.txt"));
	}
?>
```

I first tried to fetch the flag with the LFI vulnerability but that didnt work. So i read a little about the `extract()` function on `https://www.php.net/manual/en/function.extract.php`

It is extremely dangerous to use the extract function on user input because it basically grabs, in our case, the $_POST array and converts each value to a variable. Meaning we can provide the word `emergency` in our POST request and have the extract function set it. 

I intercepted the request in burp:

<img src="images/image12.png" width="450">

And added `emergency` in the request:

<img src="images/image13.png" width="450">

And we get the flag:

<img src="images/image14.png" width="450">

flag: `flag{phon3_numb3r_3xtr4ct3d}`

